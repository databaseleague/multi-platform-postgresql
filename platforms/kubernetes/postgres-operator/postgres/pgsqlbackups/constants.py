# constants
API_VERSION = "apiVersion"
KIND = "kind"
METADATA = "metadata"
METADATA_NAME = "name"
METADATA_NAMESPACE = "namespace"
SPEC = "spec"
STATUS = "status"
SPEC_CLUSTERNAME = "clusterName"
SPEC_CLUSTERNAMESPACE = "clusterNamespace"
SPEC_DELETES3 = "deletes3"
SPEC_BACKUP = "backup"
SPEC_BACKUPTOSS3 = "backupToS3"
# SPEC_BACKUP_BACKUPTOS3_KIND use to check backup mode, value must be not duplicate
SPEC_BACKUP_BACKUPTOS3_KIND = "kind"
SPEC_BACKUP_BACKUPTOS3_KIND_SIGNAL = "single"
SPEC_BACKUP_BACKUPTOS3_KIND_SCHEDULE = "schedule"
SPEC_BACKUP_BACKUPTOS3_SCHEDULE = "schedule"

BARMAN_BACKUP_LISTS = "backups_list"
BARMAN_BACKUP_BEGIN = "begin_time"
BARMAN_BACKUP_END = "end_time"
BARMAN_BACKUP_BEGIN_WAL = "begin_xlog"
BARMAN_BACKUP_END_WAL = "end_xlog"
BARMAN_BACKUP_ID = "backup_id"
BARMAN_BACKUP_SIZE = "size"
BARMAN_BACKUP_ERROR = "error"
BARMAN_BACKUP_ALIAS_NAME = "backup_name"
BARMAN_BACKUP_SNAPSHOT_CPU = "cpu"
BARMAN_BACKUP_SNAPSHOT_MEMORY = "memory"
BARMAN_BACKUP_SNAPSHOT_REPLICAS = "replicas"
BARMAN_BACKUP_SNAPSHOT_PVC_SIZE = "pvc_size"
BARMAN_BACKUP_SNAPSHOT_PVC_CLASS = "pvc_class"
BARMAN_BACKUP_NAME = "BARMAN_BACKUPNAME"
BARMAN_BACKUP_ALIAS_NAME_KEY = "BARMAN_BACKUP_ALIAS_NAME"
SPEC_BACKUP_BEGIN_TIME = "beginTime"
SPEC_BACKUP_END_TIME = "endTime"
SPEC_BACKUP_BACKUP_ID = "backupId"
SPEC_BACKUP_BACKUP_SIZE = "backupSize"
SPEC_BACKUP_BACKUP_BEGIN_WAL = "backupBeginWal"
SPEC_BACKUP_BACKUP_END_WAL = "backupEndWal"
SPEC_BACKUP_BACKUP_NEXT_RUN_TIME = "nextRunTime"

BACKUP_STATUS_FIELD = {
    SPEC_BACKUP_BEGIN_TIME: BARMAN_BACKUP_BEGIN,
    SPEC_BACKUP_END_TIME: BARMAN_BACKUP_END,
    SPEC_BACKUP_BACKUP_ID: BARMAN_BACKUP_ID,
    SPEC_BACKUP_BACKUP_BEGIN_WAL: BARMAN_BACKUP_BEGIN_WAL,
    SPEC_BACKUP_BACKUP_END_WAL: BARMAN_BACKUP_END_WAL,
    SPEC_BACKUP_BACKUP_SIZE: BARMAN_BACKUP_SIZE,
}

REQUIRED_KEYS = [API_VERSION, KIND, METADATA, SPEC, STATUS]

BARMAN_STATUS_DEFAULT_NEED_FIELD = [
    BARMAN_BACKUP_ID, BARMAN_BACKUP_BEGIN, BARMAN_BACKUP_END,
    BARMAN_BACKUP_BEGIN_WAL, BARMAN_BACKUP_END_WAL, BARMAN_BACKUP_ERROR,
    BARMAN_BACKUP_ALIAS_NAME
]
BARMAN_TIME_FORMAT = "%a %b %d %H:%M:%S %Y"
### end

DEFAULT_TIME_FORMAT = "%Y-%m-%d %H:%M:%S"
SUPPORTED_DATE_FORMAT = [BARMAN_TIME_FORMAT, DEFAULT_TIME_FORMAT]

# status
STATE = "state"
STATUS_CREATING = "Creating"
STATUS_CREATE_FAILED = "CreateFailed"
STATUS_COMPLETED = "Completed"
STATUS_TERMINATING = "Terminating"
STATE_SNAPSHOT = "snapshot"
# set on main cr
STATE_BACK_LOCKING = "backupLocking"
STATE_BACK_LOCKED = True
STATE_BACK_UNLOCKED = False

#
BACKUP_MODE_S3 = "S3"
BACKUP_ID_SPLIT_CHARACTERS = ","

BACKUP_NEED_PARAMS = {
    SPEC_CLUSTERNAME:
    SPEC_CLUSTERNAME,
    SPEC_CLUSTERNAMESPACE:
    SPEC_CLUSTERNAMESPACE,
    SPEC_DELETES3:
    SPEC_DELETES3,
    SPEC_BACKUP_BACKUPTOS3_KIND:
    "%s/%s/%s" % (SPEC_BACKUP, SPEC_BACKUPTOSS3, SPEC_BACKUP_BACKUPTOS3_KIND),
    SPEC_BACKUP_BACKUPTOS3_SCHEDULE:
    "%s/%s/%s" %
    (SPEC_BACKUP, SPEC_BACKUPTOSS3, SPEC_BACKUP_BACKUPTOS3_SCHEDULE),
}

MESSAGE_S3_CONNECT_FAILED = "s3 connect failed"
